type Challenge
  @model (subscriptions: { level: public })
  @auth(rules: [
    {allow: owner, ownerField:"owner", provider: userPools, operations:[read]},
	{ allow: groups, groups: ["admin"], operations: [read, create, delete, update] },
	{ allow: groups, groups: ["common"],operations: [read, create] },
  ])
    @key(name: "listBySpecificID", fields:["id"], queryField: "listBySpecificID")
{
  id: ID!
	phase: String
	status: String
	coName: String
	coTitle: String
	coEmail: String
	coPhone: String
	coOptIn: String
	orgaTitle: String
	orgaLocat: String 
	orgaMission: String
	orgaWebsite: String
	orgaDate: String
	chaStatem: String
	chaDes: String
	chaStak: String
	chaBac: String
	chaSup: String
	leadSup: String
	critOfSuc: String
	nextStep: String
    publCheck: String
	chatitle: String
	theme: String
	technology: String
	repu: String
	feasibil: String
	impact: String
	scalabil: String
	aligment: String
	prototype: String
	score: String 
	type: String
	comment: String
	faculty: String
	prof: String
	matchEmail: String
	numberOfT: String
	numberOfS: String
	startDate: String
	endDate: String
	cohort: String
	milestone: String
	publURL: String
	gitHubURL: String
	publDate: String
	image: String
	timestamp: Int
}